"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toUrlString = exports.errorResponse = exports.checkParms = void 0;
function checkParms(params) {
  let errors = [];
  params.forEach((parm) => {
    if (parm.valToChk == undefined) {
      errors.push(`${parm.name} Missing`);
    } else {
      console.log(parm.name, parm.valToChk);
    }
  });
  return errors;
}
exports.checkParms = checkParms;
function errorResponse(errorMessage, awsRequestId) {
  return {
    statusCode: 500,
    body: JSON.stringify({
      Error: errorMessage,
      Reference: awsRequestId,
    }),
    headers: {
      "Access-Control-Allow-Origin": "*",
    },
  };
}
exports.errorResponse = errorResponse;
function toUrlString(buffer) {
  return buffer
    .toString("base64")
    .replace(/\+/g, "-")
    .replace(/\//g, "_")
    .replace(/=/g, "");
}
exports.toUrlString = toUrlString;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFtYmRhLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibGFtYmRhLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLFNBQWdCLFVBQVUsQ0FBQyxNQUEwQztJQUNqRSxJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1FBQ3BCLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxTQUFTLEVBQUU7WUFDNUIsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLFVBQVUsQ0FBQyxDQUFDO1NBQ3ZDO2FBQ0k7WUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3pDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDSCxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDO0FBWEQsZ0NBV0M7QUFFRCxTQUFnQixhQUFhLENBQUMsWUFBb0IsRUFBRSxZQUFvQjtJQUNwRSxPQUFPO1FBQ0gsVUFBVSxFQUFFLEdBQUc7UUFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNqQixLQUFLLEVBQUUsWUFBWTtZQUNuQixTQUFTLEVBQUUsWUFBWTtTQUMxQixDQUFDO1FBQ0YsT0FBTyxFQUFFO1lBQ0wsNkJBQTZCLEVBQUUsR0FBRztTQUNyQztLQUNKLENBQUM7QUFDTixDQUFDO0FBWEQsc0NBV0M7QUFFRCxTQUFnQixXQUFXLENBQUMsTUFBVTtJQUNsQyxPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO1NBQzNCLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDO1NBQ25CLE9BQU8sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDO1NBQ25CLE9BQU8sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDM0IsQ0FBQztBQUxELGtDQUtDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNoZWNrUGFybXMocGFyYW1zOiB7IHZhbFRvQ2hrOiBhbnk7IG5hbWU6IHN0cmluZzsgfVtdKTogc3RyaW5nW10ge1xyXG4gICAgbGV0IGVycm9yczogc3RyaW5nW10gPSBbXTtcclxuICAgIHBhcmFtcy5mb3JFYWNoKChwYXJtKSA9PiB7XHJcbiAgICAgICAgaWYgKHBhcm0udmFsVG9DaGsgPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIGVycm9ycy5wdXNoKGAke3Bhcm0ubmFtZX0gTWlzc2luZ2ApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cocGFybS5uYW1lLCBwYXJtLnZhbFRvQ2hrKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIHJldHVybiBlcnJvcnM7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBlcnJvclJlc3BvbnNlKGVycm9yTWVzc2FnZTogc3RyaW5nLCBhd3NSZXF1ZXN0SWQ6IHN0cmluZykge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBzdGF0dXNDb2RlOiA1MDAsXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICBFcnJvcjogZXJyb3JNZXNzYWdlLFxyXG4gICAgICAgICAgICBSZWZlcmVuY2U6IGF3c1JlcXVlc3RJZCxcclxuICAgICAgICB9KSxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nOiAnKicsXHJcbiAgICAgICAgfSxcclxuICAgIH07XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB0b1VybFN0cmluZyhidWZmZXI6YW55KSB7XHJcbiAgICByZXR1cm4gYnVmZmVyLnRvU3RyaW5nKCdiYXNlNjQnKVxyXG4gICAgICAgIC5yZXBsYWNlKC9cXCsvZywgJy0nKVxyXG4gICAgICAgIC5yZXBsYWNlKC9cXC8vZywgJ18nKVxyXG4gICAgICAgIC5yZXBsYWNlKC89L2csICcnKTtcclxufVxyXG4iXX0=
